runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# Missing data
no_approvals <- fda_approvals %>%
group_by(Approval_Year) %>%
summarize(Approvals = n())
reported_values <- fda_approvals_long %>%
filter(Percentage != "NA") %>%
filter(Demographic == "White" | Demographic == "Black" | Demographic == "Asian" | Demographic == "Hispanic") %>%
group_by(Approval_Year, Demographic) %>%
summarize(Non_NR = n() / 3) %>%
pivot_wider(names_from = Demographic, values_from = Non_NR, values_fill = 0)
missing_data <- data.frame(no_approvals$Approval_Year,
no_approvals$Approvals,
reported_values$Asian,
reported_values$Black,
reported_values$White,
reported_values$Hispanic)
names(missing_data) <- c("Approval_Year", "Approvals", "Asian", "Black", "White", "Hispanic")
missing_data <- missing_data %>%
mutate(Asian = round(100 * Asian / Approvals, 0),
Black = round(100 * Black / Approvals, 0),
White = round(100 * White / Approvals, 0),
Hispanic = round(100 * Hispanic / Approvals, 0))
missing_data
runApp()
library(shiny)
library(tidyverse)
library(lubridate)
library(dplyr)
library(scales)
library(RColorBrewer)
library(plotly)
#library(kableExtra)
########################
### READ IN THE DATA ###
########################
print( "Loading data ..." )
fda_approvals <- read.csv('FDA_Drug_Trials_Snapshots_2015-20.csv')
disease_burden <- read.csv('Disease_burden.csv')
print( "Data loaded!" )
############################
### PROCESS FDA DTS DATA ###
############################
# Change class type of select variables to aid in data processing and visualization
fda_approvals$Enrollment <- as.numeric(as.character(fda_approvals$Enrollment))
fda_approvals$Therapeutic_Area <- as.character(fda_approvals$Therapeutic_Area)
fda_approvals$Brand_Name <- as.character(fda_approvals$Brand_Name)
fda_approvals$United_States <- as.numeric(as.character(fda_approvals$United_States))
# Add columns for non-hispanic, Men, Age under 65
fda_approvals <- fda_approvals %>% mutate(Non_Hispanic = 100 - Hispanic, .after = Hispanic)
fda_approvals <- fda_approvals %>% mutate(Male = 100 - Female, .after = Female)
fda_approvals <- fda_approvals %>% mutate(Age_under_65 = 100 - Age_65_or_older, .after = Age_65_or_older)
# Create longer version, for plotting
fda_approvals_long <- pivot_longer(fda_approvals, cols = Female:Age_80_or_older, names_to = "Demographic", values_to = "Percentage")
# Change class type of variable in long
fda_approvals_long$Percentage <- as.numeric(as.character(fda_approvals_long$Percentage))
View(fda_approvals)
library(shiny)
library(tidyverse)
library(lubridate)
library(dplyr)
library(scales)
library(RColorBrewer)
library(plotly)
library(ggplot2)
#library(kableExtra)
# Read in the data
print( "Loading data ..." )
fda_approvals <- read.csv('FDA_Drug_Trials_Snapshots_2015-20.csv')
disease_burden <- read.csv('Disease_burden.csv')
print( "Data loaded!" )
# Change class type of select variables to aid in data processing and visualization
fda_approvals$Enrollment <- as.numeric(as.character(fda_approvals$Enrollment))
fda_approvals$Therapeutic_Area <- as.character(fda_approvals$Therapeutic_Area)
fda_approvals$Brand_Name <- as.character(fda_approvals$Brand_Name)
fda_approvals$United_States <- as.numeric(as.character(fda_approvals$United_States))
# Add columns for non-hispanic, Men, Age under 65
fda_approvals <- fda_approvals %>% mutate(Non_Hispanic = 100 - Hispanic, .after = Hispanic)
fda_approvals <- fda_approvals %>% mutate(Male = 100 - Female, .after = Female)
fda_approvals <- fda_approvals %>% mutate(Age_under_65 = 100 - Age_65_or_older, .after = Age_65_or_older)
# Create longer version, for plotting
fda_approvals_long <- pivot_longer(fda_approvals, cols = Female:Age_80_or_older, names_to = "Demographic", values_to = "Percentage")
# Change class type of variable in long
fda_approvals_long$Percentage <- as.numeric(as.character(fda_approvals_long$Percentage))
# Make 15-19 dataset
approvals_15_19 <- fda_approvals %>% filter(Approval_Year != 2020)
count(is.na(fda_approvals$Hispanic))
sum(is.na(fda_approvals$Hispanic))
trashy <- table(is.na(fda_approvals$Hispanic))
trashy <- data.frame(is.na(fda_approvals$Hispanic))
View(trashy)
summary(fda_approvals)
var <- summary(fda_approvals)
View(fda_approvals)
subset <- fda_approvals[Female:Age_under_65]
library(shiny)
library(tidyverse)
library(lubridate)
library(dplyr)
library(scales)
library(RColorBrewer)
library(plotly)
library(ggplot2)
#library(kableExtra)
# Read in the data
print( "Loading data ..." )
fda_approvals <- read.csv('FDA_Drug_Trials_Snapshots_2015-20.csv')
disease_burden <- read.csv('Disease_burden.csv')
print( "Data loaded!" )
# Change class type of select variables to aid in data processing and visualization
fda_approvals$Enrollment <- as.numeric(as.character(fda_approvals$Enrollment))
fda_approvals$Therapeutic_Area <- as.character(fda_approvals$Therapeutic_Area)
fda_approvals$Brand_Name <- as.character(fda_approvals$Brand_Name)
fda_approvals$United_States <- as.numeric(as.character(fda_approvals$United_States))
# Add columns for non-hispanic, Men, Age under 65
fda_approvals <- fda_approvals %>% mutate(Non_Hispanic = 100 - Hispanic, .after = Hispanic)
fda_approvals <- fda_approvals %>% mutate(Male = 100 - Female, .after = Female)
fda_approvals <- fda_approvals %>% mutate(Age_under_65 = 100 - Age_65_or_older, .after = Age_65_or_older)
# Create longer version, for plotting
fda_approvals_long <- pivot_longer(fda_approvals, cols = Female:Age_80_or_older, names_to = "Demographic", values_to = "Percentage")
# Change class type of variable in long
fda_approvals_long$Percentage <- as.numeric(as.character(fda_approvals_long$Percentage))
# Make 15-19 dataset
approvals_15_19 <- fda_approvals %>% filter(Approval_Year != 2020)
subset <- fda_approvals[Female:Age_under_65]
subset <- fda_approvals[1, Female:Age_under_65]
View(fda_approvals_long)
View(fda_approvals_long)
non_missing_values <- fda_approvals_long %>% filter(Percentage != "NA")
View(non_missing_values)
non_missing_values %>%
group_by(Approval_Year, Demographic) %>%
summarise(Count = n())
non_missing_values <- non_missing_values %>%
group_by(Approval_Year, Demographic) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Demographic, values_from = Count)
non_missing_values
demographics <- c("Female",
"Male",
"Age_65_or_older",
"Age_under_65",
"Asian",
"Black",
"Hispanic",
"White")
demographics <- c("Female",
"Male",
"Age_65_or_older",
"Age_under_65",
"Asian",
"Black",
"Hispanic",
"White")
non_missing_values <- fda_approvals_long %>%
filter(Percentage != "NA") %>%
filter(Demographic %in% demographics)
non_missing_values <- non_missing_values %>%
group_by(Approval_Year, Demographic) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Demographic, values_from = Count)
non_missing_values
demographics <- c("Female",
"Male",
"Age_65_or_older",
"Age_under_65",
"Asian",
"Black",
"Hispanic",
"White")
non_missing_values <- fda_approvals_long %>%
filter(Percentage != "NA") %>%
filter(Demographic %in% demographics)
non_missing_values <- non_missing_values %>%
group_by(Approval_Year, Demographic) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Demographic, values_from = Count, values_fill = 0)
non_missing_values
demographics <- c("Female",
"Male",
"Age_65_or_older",
"Age_under_65",
"Asian",
"Black",
"Hispanic",
"White")
missing_values <- fda_approvals_long %>%
#filter(Percentage != "NA") %>%
filter(Demographic %in% demographics)
missing_values <- missing_values %>%
group_by(Approval_Year, Demographic) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Demographic, values_from = Count, values_fill = 0)
missing_values
demographics <- c("Female",
"Male",
"Age_65_or_older",
"Age_under_65",
"Asian",
"Black",
"Hispanic",
"White")
missing_values <- fda_approvals_long %>%
filter(Percentage == "NA") %>%
filter(Demographic %in% demographics)
missing_values <- missing_values %>%
group_by(Approval_Year, Demographic) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Demographic, values_from = Count, values_fill = 0)
missing_values
demographics <- c("Female",
"Male",
"Age_65_or_older",
"Age_under_65",
"Asian",
"Black",
"Hispanic",
"White")
missing_values <- fda_approvals_long %>%
filter(is.na(Percentage)) %>%
filter(Demographic %in% demographics)
missing_values <- missing_values %>%
group_by(Approval_Year, Demographic) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Demographic, values_from = Count, values_fill = 0)
missing_values
demographics <- c("Female",
"Male",
"Age_65_or_older",
"Age_under_65",
"Asian",
"Black",
"Hispanic",
"White")
missing_values <- fda_approvals_long %>%
filter(Percentage != "NA") %>%
#filter(is.na(Percentage)) %>%
filter(Demographic %in% demographics)
missing_values <- missing_values %>%
group_by(Approval_Year, Demographic) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Demographic, values_from = Count, values_fill = 0)
missing_values
demographics <- c("Female",
"Male",
"Age_65_or_older",
"Age_under_65",
"Asian",
"Black",
"Hispanic",
"White")
all_values <- fda_approvals_long %>%
#  filter(is.na(Percentage) != "NA") %>%
filter(Demographic %in% demographics)
all_values <- all_values %>%
group_by(Approval_Year, Demographic) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Demographic, values_from = Count, values_fill = 0)
not_missing_values <- fda_approvals_long %>%
filter(Percentage != "NA") %>%
filter(Demographic %in% demographics)
not_missing_values <- not_missing_values %>%
group_by(Approval_Year, Demographic) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Demographic, values_from = Count, values_fill = 0)
not_missing_values
all_values
all_values - not_missing_values
demographics <- c("Female",
"Age_65_or_older",
"Asian",
"Black",
"Hispanic",
"White")
all_values <- fda_approvals_long %>%
#  filter(is.na(Percentage) != "NA") %>%
filter(Demographic %in% demographics)
all_values <- all_values %>%
group_by(Approval_Year, Demographic) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Demographic, values_from = Count, values_fill = 0)
not_missing_values <- fda_approvals_long %>%
filter(Percentage != "NA") %>%
filter(Demographic %in% demographics)
not_missing_values <- not_missing_values %>%
group_by(Approval_Year, Demographic) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Demographic, values_from = Count, values_fill = 0)
not_missing_values
all_values
all_values$Asian - not_missing_values
trashy <- all_values$Asian - not_missing_values
trashy / all_values$Asian
round((trashy / all_values$Asian) * 100)
num_approvals <- fda_approvals %>%
group_by(Approval_Year) %>%
summarise(Count = n())
num_approvals
num_approvals <- num_approvals$Count
trashy <- num_approvals - not_missing_values
round((trashy / all_values$Asian) * 100)
trashy <- num_approvals - not_missing_values
trashy
# Determine demographics to include in data quality assessment
demographics <- c("Female",
"Age_65_or_older",
"Asian",
"Black",
"Hispanic",
"White")
# Calculate total number of approvals by Year
num_approvals <- fda_approvals %>%
group_by(Approval_Year) %>%
summarise(Count = n())
num_approvals <- num_approvals$Count
# Grab number of non missing values by Demographic and Year
not_missing_values <- fda_approvals_long %>%
filter(Percentage != "NA") %>%
filter(Demographic %in% demographics)
not_missing_values <- not_missing_values %>%
group_by(Approval_Year, Demographic) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Demographic, values_from = Count, values_fill = 0)
not_missing_values <- not_missing_values[, c("Approval_Year", "Female", "Age_65_or_older", "Asian", "Black", "Hispanic", "White")]
# Subtract non missing from total to get number of missing values
missing_values <- num_approvals - not_missing_values
# Calculate % of entries which are missing
missing_values_percentage <- round(missing_values / num_approvals * 100)
missing_values_percentage$Approval_Year <- not_missing_values$Approval_Year # Copy the original Years to replace unecessary math done on the Year column
missing_values_percentage
#trashy
#round((trashy / all_values$Asian) * 100)
missing_values
missing_values_percentage
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(tidyverse)
library(lubridate)
library(dplyr)
library(scales)
library(RColorBrewer)
library(plotly)
library(ggplot2)
#library(kableExtra)
# Read in the data
print( "Loading data ..." )
fda_approvals <- read.csv('FDA_Drug_Trials_Snapshots_2015-20.csv')
disease_burden <- read.csv('Disease_burden.csv')
print( "Data loaded!" )
# Change class type of select variables to aid in data processing and visualization
fda_approvals$Enrollment <- as.numeric(as.character(fda_approvals$Enrollment))
fda_approvals$Therapeutic_Area <- as.character(fda_approvals$Therapeutic_Area)
fda_approvals$Brand_Name <- as.character(fda_approvals$Brand_Name)
fda_approvals$United_States <- as.numeric(as.character(fda_approvals$United_States))
# Add columns for non-hispanic, Men, Age under 65
fda_approvals <- fda_approvals %>% mutate(Non_Hispanic = 100 - Hispanic, .after = Hispanic)
fda_approvals <- fda_approvals %>% mutate(Male = 100 - Female, .after = Female)
fda_approvals <- fda_approvals %>% mutate(Age_under_65 = 100 - Age_65_or_older, .after = Age_65_or_older)
# Create longer version, for plotting
fda_approvals_long <- pivot_longer(fda_approvals, cols = Female:Age_80_or_older, names_to = "Demographic", values_to = "Percentage")
# Change class type of variable in long
fda_approvals_long$Percentage <- as.numeric(as.character(fda_approvals_long$Percentage))
# Make 15-19 dataset
approvals_15_19 <- fda_approvals %>% filter(Approval_Year != 2020)
# Read in data
approvals_short <- fda_approvals %>% select(Brand_Name, Approval_Year, Therapeutic_Area, TA_subgroup, Indication, Asian, Black, Hispanic, White)
disease_burden <- disease_burden %>% filter(White != "NA")
# Turn both data frames into long
approvals_short <- approvals_short %>% pivot_longer(cols = Asian:White,
names_to = "Demographic",
values_to ="Enrollment")
disease_burden <- disease_burden %>% pivot_longer(cols = Asian:White,
names_to = "Demographic",
values_to = "Burden")
disease_burden$Burden <- disease_burden$Burden * 100 # Multiply disease burden from percentage to ones
# Filter per user inputs
#if ( !is.null( input$race_TA_page ) | !is.null( input$ethnicity_TA_page ) ) { # Filter race and ethnicity
#    approvals_short <- approvals_short %>%
#        filter( Demographic %in% input$race_TA_page | Demographic %in% input$ethnicity_TA_page )
#}
#if ( !is.null( input$year_TA_page ) ) { # Filter year
#    approvals_short <- approvals_short %>%
#        filter( Approval_Year %in% input$year_TA_page )
#}
#if ( !is.null( input$therapeutic_area ) ) { # Filter by Therapeutic Area
#    approvals_short <- approvals_short %>%
#        filter( Therapeutic_Area %in% input$therapeutic_area )
#}
# Merge the two df's along indication and demographic
comparison_df <- right_join(approvals_short, disease_burden,
by = c("Therapeutic_Area" = "Therapeutic_Area",
"Indication" = "Indication",
"Demographic" = "Demographic"))
# Make comparison
comparison_df <- comparison_df %>%
mutate(Comparison = case_when(
Enrollment > Burden ~ "Over represented",
Enrollment == Burden ~ "Appropriately represented",
Enrollment < Burden ~ "Under represented",
is.na(Enrollment) ~ "Demographic not collected in trial"
))
comparison_df_summary <- comparison_df %>%
group_by(Therapeutic_Area, Indication, Demographic, Comparison) %>%
summarise(Count = n())
View(comparison_df_summary)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
